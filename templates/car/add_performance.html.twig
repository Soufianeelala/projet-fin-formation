{% extends 'base.html.twig' %}

{% block main %}
<section class="performance-section">
  <div class="performance-form-wrapper"> {# ðŸ‘‰ Câ€™est ici que la classe SCSS est appliquÃ©e #}
    <h2 class="form-title">
      <i class="fas fa-tachometer-alt"></i> Ajouter des performances pour {{ car.marque }} {{ car.modele }}
    </h2>

    {{ form_start(form, {
      action: path('app_car_add_performance', { id: car.id }),
      method: 'POST'
    }) }}

    <div class="form-group performance-options">
      <div class="options-list">
        {% for child in form.children %}
          {% if child.vars.name starts with 'performanceType_' %}
            {% set id = child.vars.name|replace({'performanceType_': ''}) %}
            
            <div class="form-group performance-option">
              <label>
                {{ form_widget(child) }} {{ child.vars.label }}
              </label>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>

    <div id="performance-values" class="performance-values"></div>

    <button type="submit" class="submit-btn">Ajouter Performance</button>
    {{ form_end(form) }}
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const performanceSelection = document.querySelectorAll('[id^="performanceType_"]');
    const performanceValues = document.getElementById('performance-values');

    performanceSelection.forEach(function (checkbox) {
      checkbox.addEventListener('change', function () {
        const performanceId = this.id.replace('performanceType_', '');
        const existingInput = performanceValues.querySelector(`[data-performance-id="${performanceId}"]`);
        const label = this.closest('label')?.textContent.trim() || 'Performance';

        if (this.checked && !existingInput) {
          const input = document.createElement('input');
          input.type = 'number';
          input.name = `performanceCar[valeur_${performanceId}]`;
          input.placeholder = `Valeur pour ${label}`;
          input.required = true;
          input.setAttribute('data-performance-id', performanceId);
          input.classList.add('performance-input');

          input.style.opacity = 0;
          input.style.transition = 'opacity 0.4s ease';
          performanceValues.appendChild(input);
          setTimeout(() => input.style.opacity = 1, 50);
        } else if (!this.checked && existingInput) {
          existingInput.style.opacity = 0;
          setTimeout(() => existingInput.remove(), 400);
        }
      });
    });
  });
</script>
{% endblock %}
